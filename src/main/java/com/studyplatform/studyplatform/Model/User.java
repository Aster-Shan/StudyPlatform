package com.studyplatform.studyplatform.Model;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;


@Entity
@Table(name = "users")
@Data
@NoArgsConstructor
@AllArgsConstructor


public class User {
    @Id // primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY)//id field is automatically generated by the database
    private Long id;
 
    @Column(nullable =false, unique=true)
    private String email;
 
    @JsonIgnore
    @Column(nullable =false)
    private String password;
    private String firstName;
    private String lastName;
    private String bio;
    private String profilePictureUrl;
 
    @ElementCollection(fetch = FetchType.EAGER)
    private Set<String> academicInterests = new HashSet<>();
 
    private boolean enabled=true;
    private boolean using2FA=false;
 
    @JsonIgnore
    private String secret2FA;
 
    @Enumerated (EnumType.STRING) // enum to store data as wanted
    private AuthProvider provide= AuthProvider.LOCAL; //default provide LOCAl
    private String providerId;
 
    public enum AuthProvider{ //two provider Local and google
     LOCAL,
     GOOGLE
    }
 
    
}
